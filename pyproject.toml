[tool.black]
line-length = 120
target-version = ['py39', 'py310']
include = '\.pyi?$'

[tool.bandit]
# Skip `B320` and `B410` because the suggestion is out-of-date (see
# https://git.io/JM7Ow)
skips = ["B320", "B410"]

[pycodestyle]
max-line-length = 120
exclude = [".tox", ".git", "*/migrations/*", "*/static/CACHE/*", "docs", "node_modules", "venv", ".venv"]

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 120
default_section = "THIRDPARTY"
known_first_party = ["job_folio", "config"]
known_third_party = []
skip_glob = "**/migrations/*.py"
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true

[tool.pytest.ini_options]
minversion = "6.0"
required_plugins = ["pytest-django", "pytest-cov"]
DJANGO_SETTINGS_MODULE = "config.settings"
python_paths = ["job_folio"]
filterwarnings = ["error", "ignore::UserWarning", "ignore::django.utils.deprecation.RemovedInDjango41Warning", "ignore::django.utils.deprecation.RemovedInDjango50Warning", "ignore::DeprecationWarning"]
norecursedirs = "migrations"
addopts = ["--strict", "--tb=short", "-ra", "--pyargs"]
junit_family = "legacy"
testpaths = ["job_folio"]

[tool.coverage.run]
source = ["job_folio"]
branch = true
omit = ["**/tests/**", "**/migrations/**", "manage.py", "config/wsgi.py", "urls.py"]

[tool.coverage.report]
fail_under = 60
skip_covered = true
show_missing = true
exclude_lines = ["pragma: no cover", "raise NotImplementedError", "pass"]

[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
strict_optional = false
follow_imports = "silent"
disallow_untyped_calls = false
warn_unreachable = true

# output style
show_column_numbers = true
show_absolute_path = true
show_error_codes = true
plugins = ["mypy_django_plugin.main", "mypy_drf_plugin.main"]

[[tool.mypy.overrides]]
module = ["*.migrations.*", "__init__", "config"]
ignore_errors = true

[mypy.plugins.django-stubs]
django_settings_module = "config.settings.test"

[tool.mypy_django_plugin]
ignore_missing_model_attributes = true

[tool.django-stubs]
django_settings_module = "config.settings.test"

[tool.poetry]
name = "job-folio"
version = "0.1.0"
description = ""
authors = ["Eric Plaster <noone@jobfolio.io>"]

[tool.poetry.group.test]
optional = true
[tool.poetry.group.lint]
optional = true

[tool.poetry.group.prod.dependencies]
gunicorn = "^20.1.0"
sentry-sdk = "^1.19.1"
django-storages = {extras = ["boto3"], version = "^1.13.2"}
django-anymail = {extras = ["amazon-ses"], version = "^9.1"}

[tool.poetry.dependencies]
python = "^3.10"
pytz = "^2023.3"
python-slugify = "^8.0.1"
pillow = "^9.5.0"
argon2-cffi = "^21.3.0"
whitenoise = "^6.4.0"
redis = "^4.5.4"
hiredis = "^2.2.2"
celery = "^5.2.7"
django-celery-beat = "^2.5.0"
flower = "^1.2.0"
uvicorn = {extras = ["standard"], version = "^0.21.1"}
django = "^4.2"
django-environ = "^0.10.0"
django-model-utils = "^4.3.1"
django-allauth = "^0.54.0"
django-crispy-forms = "^2.0"
crispy-bootstrap5 = "^0.7"
django-redis = "^5.2.0"
djangorestframework = "^3.14.0"
django-cors-headers = "^3.14.0"
drf-spectacular = "^0.26.1"
django-webpack-loader = "^1.8.1"
psycopg2-binary = "^2.9.6"

[tool.poetry.group.dev.dependencies]
werkzeug = {extras = ["watchdog"], version = "^2.2.3"}
ipdb = "^0.13.13"
watchfiles = "^0.19.0"
sphinx = "^6.1.3"
sphinx-autobuild = "^2021.3.14"
factory-boy = "^3.2.1"
django-debug-toolbar = "^4.0.0"
django-extensions = "^3.2.1"

[tool.poetry.group.test.dependencies]
django-stubs = "^1.16.0"
pytest = "^7.4.0"
pytest-sugar = "^0.9.7"
djangorestframework-stubs = "^1.10.0"
coverage = "^7.2.3"
pytest-django = "^4.5.2"
factory-boy = "^3.2.1"
django-coverage-plugin = "^3.0.0"

[tool.poetry.group.lint.dependencies]
autopep8 = "^1.6.0"
flake8 = "^4.0.1"
pylint = "^2.12.2"
pylint-django = "^2.4.4"
pre-commit = "^2.20.0"
isort = "^5.12.0"
mypy = "^0.982"
pylint-celery = "^0.3"
black = "^23.3.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
